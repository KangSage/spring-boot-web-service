buildscript {
    ext {
        springBootVersion = '2.2.8.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.web.board'
version getDate()
sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')
    compile('org.mariadb.jdbc:mariadb-java-client')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.webjars:jquery:3.5.1')
    compile('org.webjars:bootstrap:4.5.0')
    // 1.4.200 최신 h2에서 오류가 있어서 명시적으로 1.4.199 사용
    testCompile('com.h2database:h2:1.4.199')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")
}

test {
    testLogging {
        // test jvm의 standard out and standard error을 console에 출력한다.

        showStandardStreams = true
        showCauses = true
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'full'
    }
}

//task build()

task deleteOldJarFiles(type: Delete) {
    delete 'build', '*.log'
}

static def getDate() {
    return new Date().format('yyyy-MM-dd-HH:mm:ss')
}
